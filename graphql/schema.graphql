schema {
  query: Query
  mutation: Mutation
}

# Interface

interface BasicPerson {
  id: ID!
  name: String!
  email: String
  createdAt: Int
}

# Types

type symptoms {
  tosse: Int
  chiado: Int
  fluxoAr: Int
  asthmaAttack: Int
  timestamp: Int
}

type Child implements BasicPerson {
  parentId: Int
  weight: Float
  height: Float
}

type Parent implements BasicPerson {
  childsId: [ID]
}
type Doctor implements BasicPerson {
  childsId: [ID]
}

# Inputs

input ChildInput {
  name: String
  parentId: Int
  weight: Float
  height: Float
}

input ParentInput {
  name: String!
  email: String!
}

input DoctorInput {
  name: String!
  email: String!
}

# Query

type Query {
  getParent(id: String!): Parent
  getChild(id: String!): Child
  getDoctor(id: String!): Doctor
}

# Mutation

type Mutation {
  createParent(input: ParentInput): Parent
  createChild(input: ChildInput): Child
  createDoctor(input: DoctorInput): Doctor
}
